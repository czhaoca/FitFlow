version: '3.8'

services:
  # API Gateway
  gateway:
    image: kong:3.5-alpine
    container_name: fitflow-gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    ports:
      - "${GATEWAY_PORT:-8000}:8000"
      - "${GATEWAY_SSL_PORT:-8443}:8443"
      - "${GATEWAY_ADMIN_PORT:-8001}:8001"
    volumes:
      - ./config/kong.yml:/kong/kong.yml:ro
    networks:
      - fitflow-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: fitflow-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-fitflow}
      POSTGRES_USER: ${DB_USER:-fitflow}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fitflow}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - fitflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-fitflow}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: fitflow-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-fitflow}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - fitflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-auth
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3001
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1d}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-user
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3002
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Scheduling Service
  scheduling-service:
    build:
      context: ./services/scheduling
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-scheduling
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3003
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Session Service
  session-service:
    build:
      context: ./services/session
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-session
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3004
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
      AI_API_KEY: ${AI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Financial Service
  financial-service:
    build:
      context: ./services/financial
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-financial
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3005
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Studio Service
  studio-service:
    build:
      context: ./services/studio
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-studio
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3006
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: ./services/notification
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-notification
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3007
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SMS_API_KEY: ${SMS_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-analytics
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3008
      DB_URL: postgresql://${DB_USER:-fitflow}:${DB_PASSWORD:-fitflow}@postgres:5432/${DB_NAME:-fitflow}
      REDIS_URL: redis://default:${REDIS_PASSWORD:-fitflow}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fitflow-network
    restart: unless-stopped

  # Storage Service (S3-compatible)
  storage-service:
    build:
      context: ./services/storage
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-storage
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3009
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET:-fitflow}
      S3_REGION: ${S3_REGION:-us-east-1}
    networks:
      - fitflow-network
    restart: unless-stopped

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    container_name: fitflow-frontend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:8000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - gateway
    networks:
      - fitflow-network
    restart: unless-stopped

  # Bull Dashboard (Development only)
  bull-dashboard:
    image: deadly0/bull-board
    container_name: fitflow-bull-dashboard
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-fitflow}
    ports:
      - "${BULL_DASHBOARD_PORT:-3010}:3000"
    depends_on:
      - redis
    networks:
      - fitflow-network
    profiles:
      - development

networks:
  fitflow-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: